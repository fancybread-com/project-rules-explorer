---
type: auto
description: Performance optimization for VS Code extensions
globs: ["**/*.ts", "**/*.js"]
alwaysApply: false
---

# VS Code Extension Performance

## Startup Performance

- Use lazy loading for heavy modules
- Minimize activation events in package.json
- Defer expensive operations until needed
- Use webpack bundling for production
- Avoid synchronous operations during activation

## Memory Management

- Dispose of resources properly in deactivate()
- Use weak references where appropriate
- Implement proper caching strategies
- Avoid memory leaks with event listeners
- Monitor memory usage in development

## File System Operations

- Use async file operations exclusively
- Implement efficient file watching
- Cache file system queries when possible
- Batch file operations when appropriate
- Use streaming for large files

## Tree View Performance

- Implement virtual scrolling for large datasets
- Use incremental loading for tree items
- Cache tree item data appropriately
- Minimize tree updates and refreshes
- Implement efficient search and filtering

## User Experience

- Show progress indicators for long operations
- Implement cancellation for user-initiated operations
- Use debouncing for search and input handling
- Provide immediate feedback for quick operations
- Optimize for perceived performance